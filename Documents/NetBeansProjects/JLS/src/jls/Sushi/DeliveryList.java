/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.aaa
 */
package jls.Sushi;

import java.util.ArrayList;
import java.util.List;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import jls.Order;
import ADT.LList;
import ADT.SListInterface;
import java.util.Random;
import javax.swing.DefaultRowSorter;
import jls.Arrangement;
import jls.Customer;
import jls.Product;

/**
 *
 * @author Sushi
 */
public class DeliveryList extends javax.swing.JPanel {

    LList<Order> OrderList;
    SListInterface<Arrangement> ArrangeList;
    LList<Customer> CustList;
    LList<Product> ProductList;

    /**
     * Creates new form DeliveryList
     */
    public DeliveryList(LList<Order> OrderList, SListInterface<Arrangement> ArrangeList, LList<Customer> CustList, LList<Product> ProductList) {
        this.OrderList = OrderList;
        this.ArrangeList = ArrangeList;
        this.CustList = CustList;
        this.ProductList = ProductList;
        initComponents();
        addRowToJTable();
        //jTable1.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
    }

    public void addRowToJTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Random random = new Random();
        int randnum = random.nextInt(900) + 100;
        Object rowData[] = new Object[3];

        for (int i = 1; i <= OrderList.getNumberOfEntries(); i++) {
            if (OrderList.getEntry(i).getStatus().equals("Pending") && OrderList.getEntry(i).getPickup_date().equals("Delivery") && OrderList.getEntry(i).getPickup_time().equals("Delivery")) {
                if (OrderList.getEntry(i).getDistance() == 0) {
                    OrderList.getEntry(i).setDistance(randnum);
                }
                if (!OrderList.getEntry(i).getDel_date().equals("")) {
                    rowData[0] = OrderList.getEntry(i).getOrder_ID();
                    rowData[1] = OrderList.getEntry(i).getDel_date();
                    rowData[2] = OrderList.getEntry(i).getDistance();

                    model.addRow(rowData);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Id", "Date", "Distance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        //TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable1.getModel());
        //            jTable1.setRowSorter(sorter);
        //
        //            List<RowSorter.SortKey> sortKeys = new ArrayList<>(25);
        //            sortKeys.add(new RowSorter.SortKey(2, SortOrder.ASCENDING));
        //            sorter.setSortKeys(sortKeys);
        jTable1.setPreferredScrollableViewportSize(jTable1.getPreferredSize());
        jTable1.setAutoCreateRowSorter(true);
        // DefaultRowSorter has the sort() method
        DefaultRowSorter sorter = ((DefaultRowSorter)jTable1.getRowSorter());
        ArrayList list = new ArrayList();
        list.add( new RowSorter.SortKey(2, SortOrder.ASCENDING) );
        sorter.setSortKeys(list);
        sorter.sort();
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
